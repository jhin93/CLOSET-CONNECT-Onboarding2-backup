import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useState } from 'react';
import axios from 'axios';
import { NATIONAL_CODE } from '../constants/nationalCode';
import { Button, ContactIcon, LikeIcon, ViewIcon, Modal, TypoBody, CameraIcon } from '@closet-design-system/core-connect';
import Carousel from "react-material-ui-carousel";

export default function Home({ creatorList, creatorIntro }) {

  console.log("creatorList : ", creatorList)

  const findCountryLabel = (countryCode) => {
    const country = NATIONAL_CODE.find(item => item.value === countryCode);
    return country ? country.label : '';
  };

  const [isModalOpen, setIsModalOpen] = useState(false);
  const modalOpen = () => {
    setIsModalOpen(true);
    console.log("isModalOpen : ", isModalOpen)
  };
  const modalClose = () => {
    setIsModalOpen(false);
    console.log("isModalOpen : ", isModalOpen)
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Closet Connect Onboarding 2 by jhin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          {creatorList.map((dataObj, index) => (
            <div className={styles.grid} key={dataObj.userId}>
              <div className={styles.card}>
                <h2>{dataObj.creator}</h2>
                <div className={styles.joblist}>
                  {
                    dataObj.occupations.filter(occupation => occupation.name && occupation.name.trim() !== '').map((occupation, index) => (
                      <React.Fragment key={index}>
                        {index > 0 && ', '}
                        <span>{occupation.name}</span>
                      </React.Fragment>
                    ))
                  }
                </div>
                <div>
                  <p>{findCountryLabel(dataObj.country)}</p>
                </div>
                <div>
                  {dataObj.photo && <img src={dataObj.photo} className={styles.creatorThumb} alt="Creator Thumbnail" />}
                </div>
                <div>
                  {dataObj.introduction !== "" && dataObj.introduction.ops.length > 0 && (
                    <p>{dataObj.introduction.ops[0].insert}</p>
                  )}
                </div>
                <div className={styles.userSection}>
                  <Button
                    shape="fill"
                    size="sm"
                    variant="primary"
                    width="initial"
                  >
                    <p>FOLLOW</p>
                  </Button>
                  <div className={styles.userInfo}>
                    <ViewIcon />
                    <p>{dataObj.viewCount}</p>
                  </div>
                  <div className={styles.userInfo}>
                    <LikeIcon />
                    <p>{dataObj.likeCount}</p>
                  </div>
                  <div className={styles.userInfo}>
                    <ContactIcon />
                    <Button onClick={modalOpen}>{dataObj.followerCount}</Button>
                    <Modal isOpen={isModalOpen} onClose={modalClose} modalZIndex={10000}>
                      <Modal.Header>제목</Modal.Header>
                      <Modal.Content>
                        <TypoBody>컨텐츠로 무엇이든 올 수 있어요</TypoBody>
                        <CameraIcon />
                      </Modal.Content>
                      <Modal.Footer>
                        <Button onClick={modalClose}>닫기</Button>
                      </Modal.Footer>
                    </Modal>
                  </div>
                </div>
              </div>
              <div className={styles.slider}>
                <Carousel cycleNavigation={true} navButtonsAlwaysVisible={true}>
                  {dataObj.items.map((content, index) => (
                    <div key={index}>
                      <img src={content.imagePath} className={styles.carouselImage} />
                    </div>
                  ))}
                </Carousel>
              </div>
            </div>
          ))}
        </div>
      </main>
    </div>
  )
}

export async function getServerSideProps(context) {
  const creatorsInputObj = {
    "keyword": "",
    "countries": [],
    "occupations": [
      2
    ],
    "pageNo": 1,
    "pageSize": 24,
    "defaultSortBy": 1,
    "sortby": 2
  };

  try {
    const response = await axios.post('https://test-connect.api.clo-set.com/api/creators', creatorsInputObj);
    const creatorList = response.data.creators;

    // Creator Introduction
    let creatorIntro = [];
    for(let i = 0; i < creatorList.length; i ++){
      if(creatorList[i].introduction !== "" && creatorList[i].introduction.ops !== [] && creatorList[i].introduction.ops[0]){
        creatorIntro.push(creatorList[i].introduction.ops[0].insert)
      } else {
        creatorIntro.push("")
      }
    }

    return {
      props: {
        creatorList: creatorList,
        creatorIntro: creatorIntro
      }
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return {
      props: {
        creatorList: []
      }
    };
  }
}


